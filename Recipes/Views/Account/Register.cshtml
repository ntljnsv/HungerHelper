@model Recipes.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}


<main aria-labelledby="title">
    <h2 class="text-center fw-bold">Select your role</h2>

    <div class="d-flex justify-content-around flex-wrap mt-4">
        <div class="card mx-3" style="width: 375px;" id="author-card" onclick="disable('author')">
            <div class="card-body">
                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form", id = "author-form", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()
                    <h4 class="text-center fw-bold">Author</h4>
                    <hr />
                    @Html.ValidationSummary("", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-form-label fw-bold" })
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", style = "margin-left:auto; margin-right:auto; width:90%;", @placeholder = "Email" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Name, new { @class = "col-form-label fw-bold" })
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", style = "margin-left:auto; margin-right:auto; width:90%;" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-form-label fw-bold" })
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", style = "margin-left:auto; margin-right:auto; width:90%;" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-form-label fw-bold" })
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", style = "margin-left:auto; margin-right:auto; width:90%;" })
                    </div>

                    <div class="form-group text-center">
                        <input type="submit" value="Register" class="btn btn-dark btn-block fw-bold" />
                    </div>

                    <input type="hidden" value="true" name="IsAuthor" />
                }
            </div>
        </div>

        <div class="card mx-3" style="width: 375px;" id="user-card" onclick="disable('user')">
            <div class="card-body">
                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form", id = "user-form", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()
                    <h4 class="text-center fw-bold">User</h4>
                    <hr />
                    @Html.ValidationSummary("", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-form-label fw-bold" })
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", style = "margin-left:auto; margin-right:auto; width:90%;", @placeholder = "Email" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Name, new { @class = "col-form-label fw-bold" })
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", style = "margin-left:auto; margin-right:auto; width:90%;" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-form-label fw-bold" })
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", style = "margin-left:auto; margin-right:auto; width:90%;" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-form-label fw-bold" })
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", style = "margin-left:auto; margin-right:auto; width:90%;" })
                    </div>

                    <div class="form-group text-center">
                        <input type="submit" value="Register" class="btn btn-dark btn-block fw-bold" />
                    </div>

                    <input type="hidden" value="false" name="IsAuthor" />
                }
            </div>
        </div>
    </div>
</main>

<style>
    #user-card {
        background-color: #fddfd2;
        border-radius: 25px;
    }
    #author-card {
        background-color: #dcd5da;
        border-radius: 25px;
    }

</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        var selected = "";
       
        function disable(role) {
            if (selected == role) {
                return;
            }
            selected = role;
            var thisCard = null;
            var otherCard = null;
            if (role == 'author') {
                thisCard = document.getElementById("author-card");
                otherCard = document.getElementById("user-card");
                document.getElementById("author-form").removeAttribute("novalidate");
                document.getElementById("user-form").setAttribute("novalidate", "novalidate");
            } else {
                thisCard = document.getElementById("user-card");
                otherCard = document.getElementById("author-card");
                document.getElementById("user-form").removeAttribute("novalidate");
                document.getElementById("author-form").setAttribute("novalidate", "novalidate");
            }
            otherCard.style.transform = "scale(0.9)";
            otherCard.style.color = "grey";
            inputs = otherCard.getElementsByClassName("form-control");
            for (var input of inputs) {
                input.disabled = true;
                input.value = "";
            }
            otherCard.getElementsByClassName("btn")[0].disabled = true;
            var validation = otherCard.getElementsByClassName("validation-summary-errors");
            if (validation.length > 0) {
                var errorList = validation[0].children[0];
                errorList.innerHTML = "";
            }
            
            thisCard.style.transform = "";
            thisCard.style.removeProperty("color");
            thisCard.style.removeProperty("transform");
            inputs = thisCard.getElementsByClassName("form-control");
            for (var input of inputs) {
                input.disabled = false;
            }
            thisCard.getElementsByClassName("btn")[0].disabled = false;

        }

       

    </script>
}
